<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>School Merit Tracker</title>
  <link rel="stylesheet" href="/css/common.css" />
  <link rel="stylesheet" href="/css/components.css" />
  <link rel="stylesheet" href="/css/home.css" />
  
  <!-- Direct critical styles for the PIN modal - no EJS! -->
  <style>
    #pinLoginModal {
      position: fixed;
      z-index: 99999;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      display: none;
      align-items: center;
      justify-content: center;
    }
    
    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 400px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
      position: relative;
    }
    
    #pinDisplay {
      width: 180px;
      height: 50px;
      border: 2px solid #333;
      border-radius: 6px;
      margin: 0 auto 20px;
      text-align: center;
      line-height: 50px;
      font-size: 2rem;
      background-color: white;
      letter-spacing: 5px;
    }
    
    .keypad {
      display: grid;
      grid-template-columns: repeat(3, 60px);
      grid-gap: 10px;
      justify-content: center;
      margin-top: 20px;
    }
    
    .keypad button {
      font-size: 1.2rem;
      padding: 12px;
      border-radius: 6px;
      border: 1px solid #ccc;
      background-color: #f8f8f8;
      cursor: pointer;
    }
    
    #submitPinBtn {
      grid-column: span 3;
      background-color: #003a69;
      color: white;
    }
    
    .login-button {
      display: block;
      margin: 20px auto;
      padding: 15px 30px;
      font-size: 1.2rem;
      background-color: #003a69;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }
    
    #debug-info {
      margin: 20px;
      padding: 15px;
      border: 1px solid #ccc;
      background-color: #f8f8f8;
    }
  </style>
</head>
<body>
  <header>
    <img src="/images/exhall-grange-logo.png" alt="Exhall Grange School Logo" class="exhall-logo">
    <h1>School Merit Tracker</h1>
    <div class="header-buttons">
      <button id="loginBtn" class="login-button">Login</button>
      <button id="signOutBtn" style="display: none;">Sign Out</button>
    </div>
  </header>
  
  <main>
    <div id="debug-info">
      <h3>Debug Information:</h3>
      <p>User Role: <%= userRole || 'none' %></p>
      <p>Show Login: <%= showLogin ? 'true' : 'false' %></p>
      <p>Login Error: <%= loginError ? 'true' : 'false' %></p>
      <p>Target URL: <%= target || 'none' %></p>
      <p>Current URL: <span id="current-url"></span></p>
    </div>
    
    <div class="welcome-section">
      <h2>Welcome to the Merit Tracking System</h2>
      <p>Track, manage, and reward student achievements with our comprehensive merit system.</p>
    </div>
    
    <div class="feature-grid">
      <div class="feature-card">
        <div class="feature-icon">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
        <h3>Pupil Management</h3>
        <p>Track and manage pupil records and merit points</p>
        <a href="/pupils" class="feature-link">Manage Pupils</a>
      </div>
      
      <div class="feature-card">
        <div class="feature-icon">üèÜ</div>
        <h3>Prize Management</h3>
        <p>Create and manage prizes that pupils can redeem</p>
        <a href="/prizes" class="feature-link">Manage Prizes</a>
      </div>
      
      <div class="feature-card">
        <div class="feature-icon">üõí</div>
        <h3>Prize Purchases</h3>
        <p>Allow pupils to redeem their merit points for prizes</p>
        <a href="/purchase" class="feature-link">Purchase Prizes</a>
      </div>
    </div>
  </main>
  
  <!-- Simple PIN Login Modal - no EJS in the critical part -->
  <div id="pinLoginModal">
    <div class="modal-content">
      <span class="close-btn" id="closePinModal" style="position: absolute; right: 15px; top: 10px; font-size: 24px; cursor: pointer;">&times;</span>
      <h2>Enter PIN (6 digits)</h2>
      
      <% if (loginError) { %>
      <div style="color: red; text-align: center; margin-bottom: 10px;">Incorrect PIN. Please try again.</div>
      <% } %>
      
      <div class="pin-container">
        <div id="pinDisplay"></div>
        <div class="keypad">
          <button class="digit-btn" data-digit="1">1</button>
          <button class="digit-btn" data-digit="2">2</button>
          <button class="digit-btn" data-digit="3">3</button>
          <button class="digit-btn" data-digit="4">4</button>
          <button class="digit-btn" data-digit="5">5</button>
          <button class="digit-btn" data-digit="6">6</button>
          <button class="digit-btn" data-digit="7">7</button>
          <button class="digit-btn" data-digit="8">8</button>
          <button class="digit-btn" data-digit="9">9</button>
          <button class="digit-btn" data-digit="0">0</button>
          <button id="backspaceBtn">Del</button>
          <button id="submitPinBtn">Submit PIN</button>
        </div>
      </div>
      
      <!-- Hidden form -->
      <form id="pinForm" action="/check-pin" method="POST" style="display: none;">
        <input type="hidden" id="pinInput" name="pin" value="">
        <input type="hidden" id="redirectTarget" name="redirect" value="<%= target || '' %>">
      </form>
    </div>
  </div>
  
  <script>
    // Display the current URL for debugging
    document.getElementById('current-url').textContent = window.location.href;
    
    // Simple direct approach without EJS in JavaScript
    document.addEventListener('DOMContentLoaded', function() {
      console.log("DOM loaded - initializing PIN modal");
      
      // Core elements
      const pinLoginModal = document.getElementById('pinLoginModal');
      const pinDisplay = document.getElementById('pinDisplay');
      const digitBtns = document.querySelectorAll('.digit-btn');
      const backspaceBtn = document.getElementById('backspaceBtn');
      const submitPinBtn = document.getElementById('submitPinBtn');
      const pinInput = document.getElementById('pinInput');
      const pinForm = document.getElementById('pinForm');
      const loginBtn = document.getElementById('loginBtn');
      const signOutBtn = document.getElementById('signOutBtn');
      const closePinModal = document.getElementById('closePinModal');
      
      // Show/hide elements based on session
      const userRole = "<%= userRole || '' %>";
      loginBtn.style.display = userRole ? 'none' : 'inline-block';
      signOutBtn.style.display = userRole ? 'inline-block' : 'none';
      
      // Handle sign out
      signOutBtn.addEventListener('click', function() {
        window.location.href = '/logout';
      });
      
      // PIN tracking
      let currentPin = '';
      const MAX_PIN_LENGTH = 6; // Support for 6-digit PIN
      
      // Check URL parameters
      const urlParams = new URLSearchParams(window.location.search);
      const showLoginParam = urlParams.get('showLogin');
      const targetParam = urlParams.get('target');
      
      console.log("URL parameters:", {
        showLogin: showLoginParam,
        target: targetParam,
        fullURL: window.location.href
      });
      
      // Basic modal functions
      function showModal() {
        console.log('Showing PIN modal');
        pinLoginModal.style.display = 'flex';
        currentPin = '';
        updateDisplay();
      }
      
      function hideModal() {
        console.log('Hiding PIN modal');
        pinLoginModal.style.display = 'none';
      }
      
      // Update PIN display
      function updateDisplay() {
        pinDisplay.textContent = '‚Ä¢'.repeat(currentPin.length);
        console.log('PIN length:', currentPin.length, '/', MAX_PIN_LENGTH);
      }
      
      // Submit PIN
      function submitPin() {
        console.log('Submitting PIN, length:', currentPin.length);
        pinInput.value = currentPin;
        
        // Make sure the target is set
        const redirectTarget = document.getElementById('redirectTarget');
        if (redirectTarget && targetParam) {
          redirectTarget.value = targetParam;
          console.log('Target URL set to:', targetParam);
        }
        
        pinForm.submit();
      }
      
      // EVENT LISTENERS
      
      // Login button
      loginBtn.addEventListener('click', function() {
        console.log('Login button clicked');
        showModal();
      });
      
      // Close button
      closePinModal.addEventListener('click', function() {
        hideModal();
      });
      
      // Digit buttons
      digitBtns.forEach(function(btn) {
        btn.addEventListener('click', function() {
          if (currentPin.length < MAX_PIN_LENGTH) {
            currentPin += this.getAttribute('data-digit');
            updateDisplay();
            
            // Auto-submit when max length reached
            if (currentPin.length === MAX_PIN_LENGTH) {
              console.log('PIN complete, auto-submitting...');
              setTimeout(submitPin, 300);
            }
          }
        });
      });
      
      // Backspace button
      backspaceBtn.addEventListener('click', function() {
        if (currentPin.length > 0) {
          currentPin = currentPin.slice(0, -1);
          updateDisplay();
        }
      });
      
      // Submit button
      submitPinBtn.addEventListener('click', function() {
        if (currentPin.length > 0) {
          submitPin();
        }
      });
      
      // Keyboard input for PIN
      document.addEventListener('keydown', function(e) {
        if (pinLoginModal.style.display === 'flex') {
          if (/^\d$/.test(e.key) && currentPin.length < MAX_PIN_LENGTH) {
            currentPin += e.key;
            updateDisplay();
            
            // Auto-submit when max length reached
            if (currentPin.length === MAX_PIN_LENGTH) {
              setTimeout(submitPin, 300);
            }
          } else if (e.key === 'Backspace' && currentPin.length > 0) {
            currentPin = currentPin.slice(0, -1);
            updateDisplay();
          } else if (e.key === 'Enter' && currentPin.length > 0) {
            submitPin();
          } else if (e.key === 'Escape') {
            hideModal();
          }
        }
      });
      
      // Show modal if showLogin parameter is present
      if (showLoginParam === 'true') {
        console.log('showLogin=true detected, showing modal immediately');
        showModal();
      }
    });
  </script>
</body>
</html>